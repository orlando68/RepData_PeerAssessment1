avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
head(weekday)
head(avg_interval_weekday)
avg_interval_weekday
avg_interval_weekday
avg_interval_weekday
avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
names(avg_interval_weekday) <- c("Mean")
names(avg_interval_weekend) <- c("Mean")
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
View(avg_interval_weekday)
View(avg_interval_weekday)
View(avg_interval_weekend)
View(avg_interval_weekend)
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
avg_interval_weekday$interval = as.numeric(row.names( avg_interval_weekday))
avg_interval_weekend$interval = as.numeric(row.names( avg_interval_weekend))
avg_interval_plot <- rbind(avg_interval_weekday,avg_interval_weekend)
xyplot(Mean ~ interval | day, data=avg_interval_plot,type='l',layout=(c(1,2)))
source('C:/OPG106300/TRABAJO/Formacion/Coursera/Reproducible Research/Course Project 1/kk.R')
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day))
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
length(activity[is.na(activity['steps']),])
act_filled <- activity
for (row in 1:nrow(act_filled)){
if ( is.na(act_filled[row,'steps']) ){
act_filled[row,'steps'] = avg_interval  [as.character(act_filled[row,'interval']),]
}
}
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
hist(as.integer(sum_day_complete))
day_stats_filled        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
names(day_stats_filled) <- c("Mean")
day_stats_filled$median <- tapply(act_filled$steps,act_filled$date,median)
day_stats_filled
act_filled    <- mutate(act_filled, dia = ifelse (weekdays(as.Date(act_filled$date)) %in% c('sábado','domingo'),'weekend', 'weekday')    )
activity_week <- split(act_filled,act_filled$dia)
weekday       <- activity_week$weekday
weekend       <- activity_week$weekend
avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
names(avg_interval_weekday) <- c("Mean")
names(avg_interval_weekend) <- c("Mean")
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
avg_interval_weekday$interval = as.numeric(row.names( avg_interval_weekday))
avg_interval_weekend$interval = as.numeric(row.names( avg_interval_weekend))
avg_interval_plot <- rbind(avg_interval_weekday,avg_interval_weekend)
xyplot(Mean ~ interval | day, data=avg_interval_plot,type='l',layout=(c(1,2)))
knit2html("PA!_template.Rmd")
library(knitr)
knit2html("PA!_template.Rmd")
knit2html("PA_template.Rmd")
knit2html("PA1_template.Rmd")
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- data.frame()
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- data.frame()
day_stats$Mean   <- tapply(act_clean$steps,act_clean$date,mean)
day_stats        <- data.frame()
day_stats$Mean   <- tapply(act_clean$steps,act_clean$date,mean)
day_stats$Mean   = tapply(act_clean$steps,act_clean$date,mean)
day_stats$Mean <-10
day_stats['Mean'] <-10
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
day_stats
print('Calculate and report the Mean and Median total number of steps taken each day')
mean(day_stats$Total)
median(day_stats$Total)
print('Calculate and report the Mean and Median total number of steps taken each day')
mean(day_stats$Total)
median(day_stats$Total)
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
length(activity[is.na(activity['steps']),])
length(is.na(activity['steps']))
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
mean(day_stats$Total)
median(day_stats$Total)
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
act_filled <- activity
for (row in 1:nrow(act_filled)){
if ( is.na(act_filled[row,'steps']) ){
act_filled[row,'steps'] = avg_interval  [as.character(act_filled[row,'interval']),]
}
}
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
hist(as.integer(sum_day_complete))
hist(as.integer(sum_day_complete))
hist(as.integer(sum_day_complete))
day_stats_filled        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
names(day_stats_filled) <- c("Mean")
day_stats_filled$median <- tapply(act_filled$steps,act_filled$date,median)
day_stats_filled
act_filled    <- mutate(act_filled, dia = ifelse (weekdays(as.Date(act_filled$date)) %in% c('sábado','domingo'),'weekend', 'weekday')    )
activity_week <- split(act_filled,act_filled$dia)
weekday       <- activity_week$weekday
weekend       <- activity_week$weekend
avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
names(avg_interval_weekday) <- c("Mean")
names(avg_interval_weekend) <- c("Mean")
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
avg_interval_weekday$interval = as.numeric(row.names( avg_interval_weekday))
avg_interval_weekend$interval = as.numeric(row.names( avg_interval_weekend))
avg_interval_plot <- rbind(avg_interval_weekday,avg_interval_weekend)
xyplot(Mean ~ interval | day, data=avg_interval_plot,type='l',layout=(c(1,2)))
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
mean(day_stats$Total)
median(day_stats$Total)
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
mean(day_stats$Total)
median(day_stats$Total)
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
act_filled <- activity
for (row in 1:nrow(act_filled)){
if ( is.na(act_filled[row,'steps']) ){
act_filled[row,'steps'] = avg_interval  [as.character(act_filled[row,'interval']),]
}
}
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
hist(as.integer(sum_day_complete),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval NA filled ")
day_stats_filled        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
names(day_stats_filled) <- c("Mean")
day_stats_filled$median <- tapply(act_filled$steps,act_filled$date,median)
day_stats_filled
act_filled    <- mutate(act_filled, dia = ifelse (weekdays(as.Date(act_filled$date)) %in% c('sábado','domingo'),'weekend', 'weekday')    )
activity_week <- split(act_filled,act_filled$dia)
weekday       <- activity_week$weekday
weekend       <- activity_week$weekend
avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
names(avg_interval_weekday) <- c("Mean")
names(avg_interval_weekend) <- c("Mean")
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
avg_interval_weekday$interval = as.numeric(row.names( avg_interval_weekday))
avg_interval_weekend$interval = as.numeric(row.names( avg_interval_weekend))
avg_interval_plot <- rbind(avg_interval_weekday,avg_interval_weekend)
xyplot(Mean ~ interval | day, data=avg_interval_plot,type='l',layout=(c(1,2)))
employee <- c('John Doe','Peter Gynn','Jolie Hope')
salary <- c(21000, 23400, 26800)
startdate <- as.Date(c('2010-11-1','2008-3-25','2007-3-14'))
employ.data <- data.frame(employee, salary, startdate)
View(employ.data)
View(employ.data)
data.frame(employee)
employee <-c()
data.frame(employee)
data.frame$employee
mean <-c(0)
meadian <-(0)
data.frame(mean,median)
meadian <-c(0)
data.frame(mean,median)
median <-c(0)
data.frame(mean,median)
kk <-data.frame(mean,median)
kk[1,]
kk[2,'Mean']<- 1
kk
kk[2,'mean']<- 1
kk
activity.csv
activity.csv
activity.csv
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
act_filled <- activity
for (row in 1:nrow(act_filled)){
if ( is.na(act_filled[row,'steps']) ){
act_filled[row,'steps'] = avg_interval  [as.character(act_filled[row,'interval']),]
}
}
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
hist(as.integer(sum_day_complete),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval NA filled ")
day_stats_filled        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
names(day_stats_filled) <- c("Mean")
day_stats_filled$median <- tapply(act_filled$steps,act_filled$date,median)
day_stats_filled$Total  <- tapply(act_filled$steps,act_filled$date,sum)
day_stats_filled
df_results['NA filled','Est.mean'] <-mean(day_stats_filled$Total)
df_results['NA filled','Est.median'] <-median(day_stats_filled$Total)
df_results
act_filled    <- mutate(act_filled, dia = ifelse (weekdays(as.Date(act_filled$date)) %in% c('sábado','domingo'),'weekend', 'weekday')    )
( read.csv('activity.csv',sep=',') )
( read.csv('activity.csv',sep=',') )
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
act_filled <- activity
for (row in 1:nrow(act_filled)){
if ( is.na(act_filled[row,'steps']) ){
act_filled[row,'steps'] = avg_interval  [as.character(act_filled[row,'interval']),]
}
}
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
act_filled <- activity
for (row in 1:nrow(act_filled)){
if ( is.na(act_filled[row,'steps']) ){
act_filled[row,'steps'] = avg_interval  [as.character(act_filled[row,'interval']),]
}
}
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
hist(as.integer(sum_day_complete),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval NA filled ")
day_stats_filled        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
names(day_stats_filled) <- c("Mean")
day_stats_filled$median <- tapply(act_filled$steps,act_filled$date,median)
day_stats_filled$Total  <- tapply(act_filled$steps,act_filled$date,sum)
day_stats_filled
df_results['NA filled','Est.mean'] <-mean(day_stats_filled$Total)
df_results['NA filled','Est.median'] <-median(day_stats_filled$Total)
df_results
act_filled    <- mutate(act_filled, dia = ifelse (weekdays(as.Date(act_filled$date)) %in% c('sábado','domingo'),'weekend', 'weekday')    )
activity_week <- split(act_filled,act_filled$dia)
weekday       <- activity_week$weekday
weekend       <- activity_week$weekend
avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
names(avg_interval_weekday) <- c("Mean")
names(avg_interval_weekend) <- c("Mean")
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
avg_interval_weekday$interval = as.numeric(row.names( avg_interval_weekday))
avg_interval_weekend$interval = as.numeric(row.names( avg_interval_weekend))
avg_interval_plot <- rbind(avg_interval_weekday,avg_interval_weekend)
xyplot(Mean ~ interval | day, data=avg_interval_plot,type='l',layout=(c(1,2)))
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
act_filled <- activity
for (row in 1:nrow(act_filled)){
if ( is.na(act_filled[row,'steps']) ){
act_filled[row,'steps'] = avg_interval  [as.character(act_filled[row,'interval']),]
}
}
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
hist(as.integer(sum_day_complete),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval NA filled ")
day_stats_filled        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
names(day_stats_filled) <- c("Mean")
day_stats_filled$median <- tapply(act_filled$steps,act_filled$date,median)
day_stats_filled$Total  <- tapply(act_filled$steps,act_filled$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
df_results['NA filled','Est.mean'] <-mean(day_stats_filled$Total)
df_results['NA filled','Est.median'] <-median(day_stats_filled$Total)
df_results
act_filled    <- mutate(act_filled, dia = ifelse (weekdays(as.Date(act_filled$date)) %in% c('sábado','domingo'),'weekend', 'weekday')    )
activity_week <- split(act_filled,act_filled$dia)
weekday       <- activity_week$weekday
weekend       <- activity_week$weekend
avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
names(avg_interval_weekday) <- c("Mean")
names(avg_interval_weekend) <- c("Mean")
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
avg_interval_weekday$interval = as.numeric(row.names( avg_interval_weekday))
avg_interval_weekend$interval = as.numeric(row.names( avg_interval_weekend))
avg_interval_plot <- rbind(avg_interval_weekday,avg_interval_weekend)
xyplot(Mean ~ interval | day, data=avg_interval_plot,type='l',layout=(c(1,2)))
