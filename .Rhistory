par(mfrow = c(1,2))
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
hist(as.integer(sum_day_complete),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval NA filled ")
day_stats_filled        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
names(day_stats_filled) <- c("Mean")
day_stats_filled$median <- tapply(act_filled$steps,act_filled$date,median)
day_stats_filled$Total  <- tapply(act_filled$steps,act_filled$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
df_results['NA filled','Est.mean'] <-mean(day_stats_filled$Total)
df_results['NA filled','Est.median'] <-median(day_stats_filled$Total)
df_results
#--------------------------------------------------------------------
act_filled    <- mutate(act_filled, dia = ifelse (weekdays(as.Date(act_filled$date)) %in% c('sÃ¡bado','domingo'),'weekend', 'weekday')    )
activity_week <- split(act_filled,act_filled$dia)
weekday       <- activity_week$weekday
weekend       <- activity_week$weekend
avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
names(avg_interval_weekday) <- c("Mean")
names(avg_interval_weekend) <- c("Mean")
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
avg_interval_weekday$interval = as.numeric(row.names( avg_interval_weekday))
avg_interval_weekend$interval = as.numeric(row.names( avg_interval_weekend))
avg_interval_plot <- rbind(avg_interval_weekday,avg_interval_weekend)
library(lattice)
xyplot(Mean ~ interval | day, data=avg_interval_plot,type='l',layout=(c(1,2)))
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
avg_interval$interval  <- as.numeric(rownames(avg_interval))   #---quitar???
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
lista       <- split(activitybis,is.na(activitybis$pivot))
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
avg_interval$interval  <- as.numeric(rownames(avg_interval))   #---quitar???
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
#-------------otra alternativa-----
activitybis                    <- mutate(activity,pivot = ifelse (is.na(steps),'non numeric','numeric') )
lista       <- split(activitybis,is.na(activitybis$pivot))
View(lista)
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
avg_interval$interval  <- as.numeric(rownames(avg_interval))   #---quitar???
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
#-------------otra alternativa-----
activitybis                    <- mutate(activity,pivot = ifelse (is.na(steps),'non numeric','numeric') )
View(activitybis)
lista       <- split(activitybis,is.na(activitybis$pivot))
View(lista)
lista       <- split(activitybis,is.na(activitybis$steps))
View(lista)
View(lista[["FALSE"]])
lista$TRUE
lista$'TRUE'
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
avg_interval$interval  <- as.numeric(rownames(avg_interval))   #---quitar???
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
#-------------otra alternativa-----
activitybis                    <- mutate(activity,pivot = ifelse (is.na(steps),'non numeric','numeric') )
lista       <- split(activitybis,is.na(activitybis$steps))
lista$`TRUE`$recuerda   <- row.names(  lista$`TRUE`)
lista$`TRUE`            <- merge(lista$`TRUE`,avg_interval,by.x='interval')
lista$`TRUE`            <- mutate(lista$`TRUE`,steps=Mean)
row.names(lista$`TRUE`) <- lista$`TRUE`$recuerda
lista$`TRUE`            <-subset(lista$`TRUE`,select=-c(Mean))
lista$`TRUE`            <-lista$`TRUE`[c('steps','date','interval')]
act_filled                     <- unsplit(lista,is.na(activitybis$steps))
View(activity)
View(act_filled)
View(act_filled)
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
avg_interval$interval  <- as.numeric(rownames(avg_interval))   #---quitar???
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
lista       <- split(activity,is.na(activity$steps))
lista$`TRUE`$recuerda   <- row.names(  lista$`TRUE`)
lista$`TRUE`            <- merge(lista$`TRUE`,avg_interval,by.x='interval')
lista$`TRUE`            <- mutate(lista$`TRUE`,steps=Mean)
row.names(lista$`TRUE`) <- lista$`TRUE`$recuerda
lista$`TRUE`            <-subset(lista$`TRUE`,select=-c(Mean))
lista$`TRUE`            <-lista$`TRUE`[c('steps','date','interval')]
act_filled                     <- unsplit(lista,is.na(activity$steps))
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
View(act_filled)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
hist(as.integer(sum_day_complete),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval NA filled ")
day_stats_filled        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
names(day_stats_filled) <- c("Mean")
day_stats_filled$median <- tapply(act_filled$steps,act_filled$date,median)
day_stats_filled$Total  <- tapply(act_filled$steps,act_filled$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
df_results['NA filled','Est.mean'] <-mean(day_stats_filled$Total)
df_results['NA filled','Est.median'] <-median(day_stats_filled$Total)
df_results
#--------------------------------------------------------------------
act_filled    <- mutate(act_filled, dia = ifelse (weekdays(as.Date(act_filled$date)) %in% c('sÃ¡bado','domingo'),'weekend', 'weekday')    )
activity_week <- split(act_filled,act_filled$dia)
weekday       <- activity_week$weekday
weekend       <- activity_week$weekend
avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
names(avg_interval_weekday) <- c("Mean")
names(avg_interval_weekend) <- c("Mean")
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
avg_interval_weekday$interval = as.numeric(row.names( avg_interval_weekday))
avg_interval_weekend$interval = as.numeric(row.names( avg_interval_weekend))
avg_interval_plot <- rbind(avg_interval_weekday,avg_interval_weekend)
library(lattice)
xyplot(Mean ~ interval | day, data=avg_interval_plot,type='l',layout=(c(1,2)))
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
avg_interval$interval  <- as.numeric(rownames(avg_interval))   #---quitar???
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
activity<- merger(activity,avg_interval,by.x='interval')
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
View(activity)
View(activity)
activity<- merge(activity,avg_interval,by.x='interval')
View(activity)
View(activity)
View(activity)
activity <- mutate(activity,steps= ifelse(is.na(steps),Mean,steps))
View(activity)
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
avg_interval$interval  <- as.numeric(rownames(avg_interval))   #---quitar???
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
act_filled  <- merge(activity,avg_interval,by.x='interval')
act_filled  <- mutate(activity,steps= ifelse(is.na(steps),Mean,steps))
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
avg_interval$interval  <- as.numeric(rownames(avg_interval))   #---quitar???
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
activity <- merge(activity,avg_interval,by.x='interval')
activity <- mutate(activity,steps= ifelse(is.na(steps),Mean,steps))
act_filled <- activity
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
hist(as.integer(sum_day_complete),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval NA filled ")
day_stats_filled        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
names(day_stats_filled) <- c("Mean")
day_stats_filled$median <- tapply(act_filled$steps,act_filled$date,median)
day_stats_filled$Total  <- tapply(act_filled$steps,act_filled$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
df_results['NA filled','Est.mean'] <-mean(day_stats_filled$Total)
df_results['NA filled','Est.median'] <-median(day_stats_filled$Total)
df_results
#--------------------------------------------------------------------
act_filled    <- mutate(act_filled, dia = ifelse (weekdays(as.Date(act_filled$date)) %in% c('sÃ¡bado','domingo'),'weekend', 'weekday')    )
activity_week <- split(act_filled,act_filled$dia)
weekday       <- activity_week$weekday
weekend       <- activity_week$weekend
avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
names(avg_interval_weekday) <- c("Mean")
names(avg_interval_weekend) <- c("Mean")
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
avg_interval_weekday$interval = as.numeric(row.names( avg_interval_weekday))
avg_interval_weekend$interval = as.numeric(row.names( avg_interval_weekend))
avg_interval_plot <- rbind(avg_interval_weekday,avg_interval_weekend)
library(lattice)
xyplot(Mean ~ interval | day, data=avg_interval_plot,type='l',layout=(c(1,2)))
source('C:/OPG106300/TRABAJO/Formacion/Coursera/Reproducible Research/Course Project 1/kk.R')
source('C:/OPG106300/TRABAJO/Formacion/Coursera/Reproducible Research/Course Project 1/kk.R')
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
avg_interval$interval  <- as.numeric(rownames(avg_interval))   #---quitar???
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
act_filled <- merge(activity,avg_interval,by.x='interval')
act_filled <- mutate(act_filled,steps= ifelse(is.na(steps),Mean,steps))
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
hist(as.integer(sum_day_complete),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval NA filled ")
day_stats_filled        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
names(day_stats_filled) <- c("Mean")
day_stats_filled$median <- tapply(act_filled$steps,act_filled$date,median)
day_stats_filled$Total  <- tapply(act_filled$steps,act_filled$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
df_results['NA filled','Est.mean'] <-mean(day_stats_filled$Total)
df_results['NA filled','Est.median'] <-median(day_stats_filled$Total)
df_results
#--------------------------------------------------------------------
act_filled    <- mutate(act_filled, dia = ifelse (weekdays(as.Date(act_filled$date)) %in% c('sÃ¡bado','domingo'),'weekend', 'weekday')    )
activity_week <- split(act_filled,act_filled$dia)
weekday       <- activity_week$weekday
weekend       <- activity_week$weekend
avg_interval_weekday <- as.data.frame(tapply(weekday$steps,weekday$interval,mean))
avg_interval_weekend <- as.data.frame(tapply(weekend$steps,weekend$interval,mean))
names(avg_interval_weekday) <- c("Mean")
names(avg_interval_weekend) <- c("Mean")
avg_interval_weekday$day = 'weekday'
avg_interval_weekend$day = 'weekend'
avg_interval_weekday$interval = as.numeric(row.names( avg_interval_weekday))
avg_interval_weekend$interval = as.numeric(row.names( avg_interval_weekend))
avg_interval_plot <- rbind(avg_interval_weekday,avg_interval_weekend)
library(lattice)
xyplot(Mean ~ interval | day, data=avg_interval_plot,type='l',layout=(c(1,2)))
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
names(avg_interval) <- c("Mean")
x                   <- as.integer(row.names(avg_interval))
y                   <- avg_interval$Mean
plot(x,y,type='l')
print('Interval with hightest with maximun number of points')
rownames(avg_interval)[which.max(apply(avg_interval,MARGIN=1,max))]
#-------------------------------------------------------------
print('Number of missing values')
sum(is.na(activity['steps']))
act_filled <- merge(activity,avg_interval,by.x='interval')
act_filled <- mutate(act_filled,steps= ifelse(is.na(steps),Mean,steps))
sum_day_complete<- tapply(act_filled$steps,act_filled$date,sum)
par(mfrow = c(1,2))
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
rm(list = ls())
activity       <- ( read.csv('activity.csv',sep=',') )
act_clean      <- activity[!is.na(activity['steps']),] # activity[!is.na(activity[,'steps']),]
act_clean$date <- as.character(act_clean$date)
#-------mean
#-----------activity_cleaned['steps'] es una lista
sum_day        <- tapply(act_clean$steps,act_clean$date,sum)
hist(as.integer(sum_day),xlab = "Intervals", ylab = "Frequency of Total steps/ interval", main = " TOtal Number of steps per interval ")
day_stats        <- as.data.frame(tapply(act_clean$steps,act_clean$date,mean))
names(day_stats) <- c("Mean")
day_stats$median <- tapply(act_clean$steps,act_clean$date,median)
day_stats$Total  <- tapply(act_clean$steps,act_clean$date,sum)
print('Calculate and report the Mean and Median total number of steps taken each day')
Est.mean <- c(mean(day_stats$Total))
Est.median <- c(median(day_stats$Total))
df_results <-data.frame(Est.mean,Est.median)
row.names(df_results) <- c('NA removed')
df_results
#---------------------------------------------
avg_interval        <- as.data.frame(tapply(act_clean$steps,act_clean$interval,mean)) #<--------tiene la media cada intervalo de tiempo
View(avg_interval)
names(avg_interval) <- c("Mean")
avg_interval$interval  <- as.numeric(rownames(avg_interval))   #---quitar???
day_stats_filled$er        <- as.data.frame(tapply(act_filled$steps,act_filled$date,mean))
